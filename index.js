const { Telegraf, Scenes, session } = require("telegraf")
const OpenAI = require("openai")
require("dotenv").config()

const openai = new OpenAI({
  apiKey: process.env.OPENROUTER_API_KEY,
  baseURL: "https://openrouter.ai/api/v1",
})

// FSM —Å—Ü–µ–Ω–∞
const askScene = new Scenes.WizardScene(
  "ask-scene",
  (ctx) => {
    ctx.reply("üëã –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
    return ctx.wizard.next()
  },
  (ctx) => {
    ctx.wizard.state.name = ctx.message.text
    ctx.reply("üéØ –ö–∞–∫–∞—è –≤–∞—à–∞ —Ü–µ–ª—å –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ? (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–ª—è –∫–∞—Ä—å–µ—Ä—ã, IELTS, –ø–µ—Ä–µ–µ–∑–¥...)")
    return ctx.wizard.next()
  },
  (ctx) => {
    ctx.wizard.state.goal = ctx.message.text
    ctx.reply("‚è∞ –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é –≥–æ—Ç–æ–≤—ã –∑–∞–Ω–∏–º–∞—Ç—å—Å—è?")
    return ctx.wizard.next()
  },
  (ctx) => {
    ctx.wizard.state.hours = ctx.message.text
    const { name, goal, hours } = ctx.wizard.state

    ctx.reply(`‚úÖ –°–ø–∞—Å–∏–±–æ, ${name}!\n\nüìå –¶–µ–ª—å: ${goal}\nüïê –í—Ä–µ–º—è: ${hours} —á/–Ω–µ–¥\n\n–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä.`)
    return ctx.scene.leave()
  }
)

const stage = new Scenes.Stage([askScene])
const bot = new Telegraf(process.env.BOT_TOKEN)

bot.use(session())
bot.use(stage.middleware())

// –°—Ç–∞—Ä—Ç
bot.start((ctx) => ctx.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /–∑–∞–ø–∏—Å–∞—Ç—å—Å—è —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç—É ‚úçÔ∏è"))

// FSM –∑–∞–ø—É—Å–∫
bot.command("–∑–∞–ø–∏—Å–∞—Ç—å—Å—è", (ctx) => ctx.scene.enter("ask-scene"))

// GPT-–ø–æ–¥–¥–µ—Ä–∂–∫–∞ (–æ–±—â–∏–π —á–∞—Ç)
bot.on("text", async (ctx) => {
  const userText = ctx.message.text

  if (userText.startsWith("/")) return // –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã

  const gptResponse = await openai.chat.completions.create({
    model: "openai/gpt-3.5-turbo",
    messages: [
      { role: "system", content: "–¢—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —à–∫–æ–ª—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ. –û—Ç–≤–µ—á–∞–π –≤–µ–∂–ª–∏–≤–æ, –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É." },
      { role: "user", content: userText }
    ],
    headers: {
      "HTTP-Referer": "https://fluentfox.online",
      "X-Title": "FluentFox Assistant"
    }
  })

  const reply = gptResponse.choices[0].message.content
  ctx.reply(reply)
})

bot.launch()
console.log("ü§ñ FSM-–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
